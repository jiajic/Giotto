% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial_interaction_spot.R
\name{findICFSpot}
\alias{findICFSpot}
\title{findICFSpot}
\usage{
findICFSpot(
  gobject,
  spat_unit = NULL,
  feat_type = NULL,
  expression_values = c("normalized", "scaled", "custom"),
  ave_celltype_exp,
  selected_features = NULL,
  spatial_network_name = "Delaunay_network",
  deconv_name = "DWLS",
  minimum_unique_cells = 5,
  minimum_unique_int_cells = 5,
  CCI_cell_score = 0.1,
  dwls_cutoff = 0.001,
  diff_test = "permutation",
  nr_permutations = 100,
  adjust_method = "fdr",
  do_parallel = TRUE,
  cores = NA,
  set_seed = TRUE,
  seed_number = 1234,
  verbose = FALSE
)
}
\arguments{
\item{gobject}{A giotto object}

\item{spat_unit}{spatial unit (e.g. 'cell')}

\item{feat_type}{feature type (e.g. 'rna')}

\item{expression_values}{expression values to use}

\item{ave_celltype_exp}{average feature expression in each cell type}

\item{selected_features}{subset of selected features (optional)}

\item{spatial_network_name}{name of spatial network to use}

\item{deconv_name}{name of deconvolution/spatial enrichment values to use}

\item{minimum_unique_cells}{minimum number of target cells required}

\item{minimum_unique_int_cells}{minimum number of interacting cells required}

\item{CCI_cell_score}{cell proximity score to filter no interacted cell}

\item{dwls_cutoff}{cell type proportion cutoff to label the cell}

\item{diff_test}{which differential expression test}

\item{nr_permutations}{number of permutations if diff_test = permutation}

\item{adjust_method}{which method to adjust p-values}

\item{do_parallel}{run calculations in parallel with mclapply}

\item{cores}{number of cores to use if do_parallel = TRUE}

\item{set_seed}{set a seed for reproducibility}

\item{seed_number}{seed number}

\item{verbose}{be verbose}
}
\value{
\code{icfObject} that contains the differential feat scores
}
\description{
Identifies cell-to-cell Interaction Changed Features (ICF) for
spots, i.e. features expression residual that are different due to proximity
to other cell types. Works using results from celltype deconvolution methods
such as those from \code{\link[=runDWLSDeconv]{runDWLSDeconv()}}.
}
\details{
Function to calculate if features expression residual are
differentially expressed in cell types when they interact
(approximated by physical proximity) with other cell types.
Feature expression residual calculated as:
(observed expression in spot - cell_type_proportion *
average_expressed_in_cell_type)
The results data.table in the \code{icfObject} contains - at least -
the following columns:
\itemize{
\item \strong{features:} All or selected list of tested features
\item \strong{sel:} average feature expression residual in the interacting cells
from the target cell type
\item \strong{other:} average feature expression residual in the NOT-interacting
cells from the target cell type
\item \strong{pcc_sel:} correlation between cell proximity score and expression
residual in the interacting cells from the target cell type
\item \strong{pcc_other:} correlation between cell proximity score and expression
residual in the NOT-interacting cells from the target cell type
\item \strong{pcc_diff:} correlation difference between sel and other
\item \strong{p.value:} associated p-value
\item \strong{p.adj:} adjusted p-value
\item \strong{cell_type:} target cell type
\item \strong{int_cell_type:} interacting cell type
\item \strong{nr_select:} number of cells for selected target cell type
\item \strong{int_nr_select:} number of cells for interacting cell type
\item \strong{unif_int:} cell-cell interaction
}
}
\examples{
g <- GiottoData::loadGiottoMini("visium")
x <- findMarkers_one_vs_all(g,
    cluster_column = "leiden_clus", min_feats = 20
)
sign_gene <- x$feats

sign_matrix <- matrix(rnorm(length(sign_gene) * 8, mean = 10),
    nrow = length(sign_gene)
)
rownames(sign_matrix) <- sign_gene
colnames(sign_matrix) <- paste0("celltype_", unique(x$cluster))

g <- runDWLSDeconv(gobject = g, sign_matrix = sign_matrix)
ave_celltype_exp <- calculateMetaTable(g, metadata_cols = "leiden_clus")
ave_celltype_exp <- reshape2::dcast(ave_celltype_exp, variable~leiden_clus)
rownames(ave_celltype_exp) <- ave_celltype_exp$variable
ave_celltype_exp <- ave_celltype_exp[,-1]
colnames(ave_celltype_exp) <- colnames(sign_matrix)

findICFSpot(g,
    spat_unit = "cell",
    feat_type = "rna",
    ave_celltype_exp = ave_celltype_exp,
    spatial_network_name = "spatial_network"
)
}
\seealso{
\code{\link[=findInteractionChangedFeats]{findInteractionChangedFeats()}}
}
