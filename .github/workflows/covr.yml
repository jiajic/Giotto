

name: code coverage

on:
  push:
    branches:
      - 'suite'
      - 'suite_dev'
  # pull_request:
  #   types: closed
  #   branches: [ "main" ]
  schedule:
    - cron: '16 20 * * 2'

jobs:
  test-coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:

      - name: Checkout repo for workflow access
        uses: actions/checkout@v4

      - name: Set up R environment
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Set up dependencies (general)
        uses: r-lib/actions/setup-r-dependencies@v2
        env:
          _R_CHECK_FORCE_SUGGESTS: false
          _R_CHECK_RD_XREFS: false
        with:
          dependencies: '"hard"' # do not use suggested dependencies
          install-pandoc: false
          extra-packages: |
            any::rcmdcheck
            any::testthat
            any::rlang
            any::R.utils
            any::covr
            any::remotes
            any::hdf5r
            github::drieslab/GiottoData
          needs: coverage

      - name: Generate coverage report
        run: |
          covr::codecov(
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(Sys.getenv("RUNNER_TEMP"), "package")
          )
        shell: Rscript {0}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: e6770448-c694-49d7-b83f-b6cb21c0e7ad
          fail_ci_if_error: false
          flags: unittests
          verbose: true
